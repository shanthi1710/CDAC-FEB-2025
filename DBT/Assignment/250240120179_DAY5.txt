Assignment â€“ 5
--------------------------------------------------------------------------------
1. List sum of salary for each department.
-->
mysql>  select d.dname,sum(e.sal) from emp e join dept d on d.deptno = e.deptno group by d.dname;
+------------+------------+
| dname      | sum(e.sal) |
+------------+------------+
| RESEARCH   |   10875.00 |
| SALES      |    9400.00 |
| ACCOUNTING |    8750.00 |
+------------+------------+

2. List department wise sum sal only if the sum for any department is  > 10000.
-->
mysql>  select d.dname,sum(e.sal) from emp e join dept d on d.deptno = e.deptno group by d.dname having sum(e.sal)>10000;
+----------+------------+
| dname    | sum(e.sal) |
+----------+------------+
| RESEARCH |   10875.00 |
+----------+------------+

3. Display job wise sum of salary for all departments (excluding dept 30) whose sum salary is >9000.
-->
mysql> SELECT job, SUM(sal) AS total_salary
    -> FROM emp
    -> WHERE deptno <> 30
    -> GROUP BY job
    -> HAVING SUM(sal) > 9000;
Empty set (0.01 sec)

4. Display job wise max sal only for managers, clerks, salesman working in dept 10 and 20. Sort the data by des order of the max salary.
-->
mysql> SELECT job, MAX(sal) AS max_salary
    -> FROM emp
    -> WHERE job IN ('MANAGER', 'CLERK', 'SALESMAN')
    -> AND deptno IN (10, 20)
    -> GROUP BY job
    -> ORDER BY max_salary DESC;
+---------+------------+
| job     | max_salary |
+---------+------------+
| MANAGER |    2975.00 |
| CLERK   |    1300.00 |
+---------+------------+

5. Display job wise number of employees in all the department with sum salary > 3000
-->
mysql> select job,count(*) as num_emp,sum(sal) as total_sal
    -> from emp
    -> group by job
    -> having total_sal >3000;
+-----------+---------+-----------+
| job       | num_emp | total_sal |
+-----------+---------+-----------+
| CLERK     |       4 |   4150.00 |
| SALESMAN  |       4 |   5600.00 |
| MANAGER   |       3 |   8275.00 |
| ANALYST   |       2 |   6000.00 |
| PRESIDENT |       1 |   5000.00 |
+-----------+---------+-----------+

6. Display the department number having atleast 3 employees in it.
-->
mysql> select deptno,count(*) as num_emp
    -> from emp
    -> group by deptno
    -> having num_emp>=3;
+--------+---------+
| deptno | num_emp |
+--------+---------+
|     20 |       5 |
|     30 |       6 |
|     10 |       3 |
+--------+---------+
sele
8. Display deptno, salary sum and min(sum) for all employees who are managers.
-->
mysql> SELECT DEPTNO, SUM(SAL), MIN(SAL)
    ->      FROM EMP
    ->      WHERE JOB = 'MANAGER'
    ->     GROUP BY DEPTNO;
+--------+----------+----------+
| DEPTNO | SUM(SAL) | MIN(SAL) |
+--------+----------+----------+
|     20 |  2975.00 |  2975.00 |
|     30 |  2850.00 |  2850.00 |
|     10 |  2450.00 |  2450.00 |
+--------+----------+----------+


9. Find sum(sal) for each dept having more than 2 clerk. 
-->
mysql> SELECT deptno, SUM(sal) AS total_salary
    -> FROM emp
    -> WHERE deptno IN (
    ->     SELECT deptno
    ->     FROM emp
    ->     WHERE job = 'CLERK'
    ->     GROUP BY deptno
    ->     HAVING COUNT(*) > 2
    -> )
    -> GROUP BY deptno;
Empty set (0.00 sec)

10. Calculate how many employees earn sal more than 1500 in each dept.
-->
mysql> select deptno,count(*) as num_emp
    -> from emp
    -> where sal>1500
    -> group by deptno;
+--------+---------+
| deptno | num_emp |
+--------+---------+
|     30 |       2 |
|     20 |       3 |
|     10 |       2 |
+--------+---------+

11. Display all employees who earn sal more that Allen earns.
-->
mysql> select *
    -> from emp
    -> where sal > (
    ->          select sal
    ->          from emp
    ->          where ename = 'ALLEN'
    -> );
+-------+-------+-----------+------+------------+---------+------+--------+
| EMPNO | ENAME | JOB       | MGR  | HIREDATE   | SAL     | COMM | DEPTNO |
+-------+-------+-----------+------+------------+---------+------+--------+
|  7566 | JONES | MANAGER   | 7839 | 1981-04-02 | 2975.00 | NULL |     20 |
|  7698 | BLAKE | MANAGER   | 7839 | 1981-05-01 | 2850.00 | NULL |     30 |
|  7782 | CLARK | MANAGER   | 7839 | 1981-06-09 | 2450.00 | NULL |     10 |
|  7788 | SCOTT | ANALYST   | 7566 | 1982-12-09 | 3000.00 | NULL |     20 |
|  7839 | KING  | PRESIDENT | NULL | 1981-11-17 | 5000.00 | NULL |     10 |
|  7902 | FORD  | ANALYST   | 7566 | 1981-12-03 | 3000.00 | NULL |     20 |
+-------+-------+-----------+------+------------+---------+------+--------+

12. Display all employees who are working in Smith's department.
-->
mysql> select *
    -> from emp
    -> where deptno = (
    ->          select deptno
    ->          from emp
    ->          where ename = 'SMITH'
    -> );
+-------+-------+---------+------+------------+---------+------+--------+
| EMPNO | ENAME | JOB     | MGR  | HIREDATE   | SAL     | COMM | DEPTNO |
+-------+-------+---------+------+------------+---------+------+--------+
|  7369 | SMITH | CLERK   | 7902 | 1980-12-17 |  800.00 | NULL |     20 |
|  7566 | JONES | MANAGER | 7839 | 1981-04-02 | 2975.00 | NULL |     20 |
|  7788 | SCOTT | ANALYST | 7566 | 1982-12-09 | 3000.00 | NULL |     20 |
|  7876 | ADAMS | CLERK   | 7788 | 1983-01-12 | 1100.00 | NULL |     20 |
|  7902 | FORD  | ANALYST | 7566 | 1981-12-03 | 3000.00 | NULL |     20 |
+-------+-------+---------+------+------------+---------+------+--------+

13. Display all employees who earn salary < Scott and salary > Adams sal.
-->
mysql> SELECT *
    -> FROM emp
    -> WHERE sal < (SELECT sal FROM emp WHERE ename = 'SCOTT')
    -> AND sal > (SELECT sal FROM emp WHERE ename = 'ADAMS');
+-------+--------+----------+------+------------+---------+---------+--------+
| EMPNO | ENAME  | JOB      | MGR  | HIREDATE   | SAL     | COMM    | DEPTNO |
+-------+--------+----------+------+------------+---------+---------+--------+
|  7499 | ALLEN  | SALESMAN | 7698 | 1981-02-20 | 1600.00 |  300.00 |     30 |
|  7521 | WARD   | SALESMAN | 7698 | 1981-02-22 | 1250.00 |  500.00 |     30 |
|  7566 | JONES  | MANAGER  | 7839 | 1981-04-02 | 2975.00 |    NULL |     20 |
|  7654 | MARTIN | SALESMAN | 7698 | 1981-09-28 | 1250.00 | 1400.00 |     30 |
|  7698 | BLAKE  | MANAGER  | 7839 | 1981-05-01 | 2850.00 |    NULL |     30 |
|  7782 | CLARK  | MANAGER  | 7839 | 1981-06-09 | 2450.00 |    NULL |     10 |
|  7844 | TURNER | SALESMAN | 7698 | 1981-09-08 | 1500.00 |    0.00 |     30 |
|  7934 | MILLER | CLERK    | 7782 | 1982-01-23 | 1300.00 |    NULL |     10 |
+-------+--------+----------+------+------------+---------+---------+--------+

14. Display all employees with salary > either Ward's  salary or Blake's sal.
-->
mysql> select *
    -> from emp
    -> where sal>( select sal from emp where ename = 'WARD')
    -> or sal > (select sal from emp where ename = 'BLAKE');
+-------+--------+-----------+------+------------+---------+--------+--------+
| EMPNO | ENAME  | JOB       | MGR  | HIREDATE   | SAL     | COMM   | DEPTNO |
+-------+--------+-----------+------+------------+---------+--------+--------+
|  7499 | ALLEN  | SALESMAN  | 7698 | 1981-02-20 | 1600.00 | 300.00 |     30 |
|  7566 | JONES  | MANAGER   | 7839 | 1981-04-02 | 2975.00 |   NULL |     20 |
|  7698 | BLAKE  | MANAGER   | 7839 | 1981-05-01 | 2850.00 |   NULL |     30 |
|  7782 | CLARK  | MANAGER   | 7839 | 1981-06-09 | 2450.00 |   NULL |     10 |
|  7788 | SCOTT  | ANALYST   | 7566 | 1982-12-09 | 3000.00 |   NULL |     20 |
|  7839 | KING   | PRESIDENT | NULL | 1981-11-17 | 5000.00 |   NULL |     10 |
|  7844 | TURNER | SALESMAN  | 7698 | 1981-09-08 | 1500.00 |   0.00 |     30 |
|  7902 | FORD   | ANALYST   | 7566 | 1981-12-03 | 3000.00 |   NULL |     20 |
|  7934 | MILLER | CLERK     | 7782 | 1982-01-23 | 1300.00 |   NULL |     10 |
+-------+--------+-----------+------+------------+---------+--------+--------+

15. Display all employees who earn more than average sal of dept 10.
-->
mysql> select *
    -> from emp
    -> where sal > (select avg(sal) from emp where deptno = 10);
+-------+-------+-----------+------+------------+---------+------+--------+
| EMPNO | ENAME | JOB       | MGR  | HIREDATE   | SAL     | COMM | DEPTNO |
+-------+-------+-----------+------+------------+---------+------+--------+
|  7566 | JONES | MANAGER   | 7839 | 1981-04-02 | 2975.00 | NULL |     20 |
|  7788 | SCOTT | ANALYST   | 7566 | 1982-12-09 | 3000.00 | NULL |     20 |
|  7839 | KING  | PRESIDENT | NULL | 1981-11-17 | 5000.00 | NULL |     10 |
|  7902 | FORD  | ANALYST   | 7566 | 1981-12-03 | 3000.00 | NULL |     20 |
+-------+-------+-----------+------+------------+---------+------+--------+

16. Display all employees who are working in research department.
-->

mysql> SELECT e.ename, e.job, e.sal, d.dname
    -> FROM emp e
    -> JOIN dept d ON e.deptno = d.deptno
    -> WHERE d.dname = 'RESEARCH';
+-------+---------+---------+----------+
| ename | job     | sal     | dname    |
+-------+---------+---------+----------+
| SMITH | CLERK   |  800.00 | RESEARCH |
| JONES | MANAGER | 2975.00 | RESEARCH |
| SCOTT | ANALYST | 3000.00 | RESEARCH |
| ADAMS | CLERK   | 1100.00 | RESEARCH |
| FORD  | ANALYST | 3000.00 | RESEARCH |
+-------+---------+---------+----------+

17. Display deptno, sum of salary  and min(sal) for all employees who are managers.
-->
mysql> select deptno,sum(sal) as tot_sal,min(sum(sal)) over() as min_sum
    -> from emp
    -> where job='MANAGER'
    -> group by deptno;
+--------+---------+---------+
| deptno | tot_sal | min_sum |
+--------+---------+---------+
|     20 | 2975.00 | 2450.00 |
|     30 | 2850.00 | 2450.00 |
|     10 | 2450.00 | 2450.00 |
+--------+---------+---------+

18. Write a query which will display dept no and dept names to which no employee is assigned dept  . Use emp and dept table.
1)mysql> select d.deptno,d.dname
    -> from dept d
    -> left join emp e on d.deptno = e.deptno
    -> where e.deptno is null;
+--------+------------+
| deptno | dname      |
+--------+------------+
|     40 | OPERATIONS |
+--------+------------+

2)mysql> select deptno,dname
    -> from dept
    -> where deptno not in(select distinct deptno from emp);
+--------+------------+
| deptno | dname      |
+--------+------------+
|     40 | OPERATIONS |
+--------+------------+

Create following tables and solve the  queries
1. create table category(cid int primary key auto_increment, cname varchar (15) unique not null, description varchar(30))
-----------------------------------------------------          
cid    cname                   description
------------------------------------------------------
1      chips                       very crunchy
2      chocolate               very chocolaty
3      snacks                     yummy
4      cold drinks             thanda thanda cool cool

mysql> CREATE TABLE category (
    ->     cid INT PRIMARY KEY AUTO_INCREMENT,
    ->     cname VARCHAR(15) UNIQUE NOT NULL,
    ->     description VARCHAR(30)
    -> );
Query OK, 0 rows affected (0.04 sec)

mysql>
mysql> INSERT INTO category (cname, description) VALUES
    -> ('chips', 'very crunchy'),
    -> ('chocolate', 'very chocolaty'),
    -> ('snacks', 'yummy'),
    -> ('cold drinks', 'thanda thanda cool cool');
Query OK, 4 rows affected (0.01 sec)
Records: 4  Duplicates: 0  Warnings: 0


2. create table Product(pid  int primary key, pname varchar (20), price float (6,2) default 20.00, qty int check(qty>0)   cid int  ,   sid int,   constraint fk_cid foreign key(cid) references category(cid) on delete set null, 
 constraint fk_sid foreign key(sid) references salesman(sid));
--------------------------------------------------------------------------------------------
   prodid      pname               qty           price           catid          sid 
----------------------------------------------------------------------------------------------
   123           lays                      30           30.00            1               12
   111           pepsi                   40           50.00             4              11
   134           nachos                50           50.00            1               12
   124           dairy milk           40          60.00             2               14 
   125           pringles               40          60.00            1               14
   213           Sketch Pens       56          150.00         null            11
   167           eraser                  90          5.00            null           null
 
CREATE TABLE Product (
    pid INT PRIMARY KEY, 
    pname VARCHAR(20), 
    price FLOAT(6,2) DEFAULT 20.00, 
    qty INT CHECK(qty > 0),   
    cid INT,   
    sid INT,   
    CONSTRAINT fk_cid FOREIGN KEY (cid) REFERENCES category(cid) ON DELETE SET NULL, 
    CONSTRAINT fk_sid FOREIGN KEY (sid) REFERENCES salesman(sid) ON DELETE CASCADE
);

INSERT INTO Product (pid, pname, qty, price, cid, sid) VALUES
(123, 'lays', 30, 30.00, 1, 12),
(111, 'pepsi', 40, 50.00, 4, 11),
(134, 'nachos', 50, 50.00, 1, 12),
(124, 'dairy milk', 40, 60.00, 2, 14),
(125, 'pringles', 40, 60.00, 1, 14),
(213, 'Sketch Pens', 56, 150.00, NULL, 11),
(167, 'eraser', 90, 5.00, NULL, NULL);


3. create table salesman(sid int primary key, sname varchar (15) unique not null, city varchar(15))
--------------------------------- 
sid     sname           city
---------------------------------
11      Rahul           Pune
12      Kirti              Mumbai
13      Prasad          Nashik
14      Arnav           Amravati

INSERT INTO salesman (sid, sname, city) VALUES
(11, 'Rahul', 'Pune'),
(12, 'Kirti', 'Mumbai'),
(13, 'Prasad', 'Nashik'),
(14, 'Arnav', 'Amravati');


1. List all pid, pname, cid, cname  with category chips
-->
mysql> select pid,pname,cid
    -> from product
    -> where cid=(
    -> select cid from category where cname = 'CHIPS');
+-----+----------+------+
| pid | pname    | cid  |
+-----+----------+------+
| 123 | lays     |    1 |
| 125 | pringles |    1 |
| 134 | nachos   |    1 |
+-----+----------+------+

2. Display all products sold by kirti
-->
mysql> select * from product where sid = (select sid from salesman where sname='kirti');
+-----+--------+-------+------+------+------+
| pid | pname  | price | qty  | cid  | sid  |
+-----+--------+-------+------+------+------+
| 123 | lays   | 30.00 |   30 |    1 |   12 |
| 134 | nachos | 50.00 |   50 |    1 |   12 |
+-----+--------+-------+------+------+------+

3. Display all salesmen who did not sell any product
-->
3. Display all salesmen who did not sell any product
â†’
mysql> select *
    -> from salesmen
    -> where sid not in(select sid from product where sid is not NULL);
+-----+--------+--------+
| SID | SNAME  | CITY   |
+-----+--------+--------+
|  13 | Prasad | Nashik |
+-----+--------+--------+

4. Display all category for which no product is assigned
-->
mysql> select *
    -> from category
    -> where cid not in (select cid from product where cid is not null);
+-----+--------+-------------+
| CID | CNAME  | DESCRIPTION |
+-----+--------+-------------+
|   3 | snacks | yummy       |
+-----+--------+-------------+


5. Display all products to which  category is  not assigned
-->

mysql> select * from product where cid is null;
+-----+-------------+-------+------+------+------+
| PID | PNAME       | PRICE | QTY  | CID  | SID  |
+-----+-------------+-------+------+------+------+
| 167 | eraser      | 90.00 |    5 | NULL | NULL |
| 213 | Sketch Pens | 56.00 |  150 | NULL |   11 |
+-----+-------------+-------+------+------+------+

6. List all salesmen who live  in city where  name starts with P or N
-->

mysql> select * from salesman where city like 'p%' or city like 'n%';
+-----+----------+--------+------------+
| sid | sname    | city   | experience |
+-----+----------+--------+------------+
|   2 | Seema    | Pune   |          8 |
|   3 | Shailesh | Nagpur |          7 |
|   4 | Rakhi    | Pune   |          2 |
|  11 | Rahul    | Pune   |       NULL |
|  13 | Prasad   | Nashik |       NULL |
+-----+----------+--------+------------+

19. Try all TCL commands. 
-->
mysql> select * from emp100;
+-------+--------+-----------+------+------------+---------+---------+--------+
| EMPNO | ENAME  | JOB       | MGR  | HIREDATE   | SAL     | COMM    | DEPTNO |
+-------+--------+-----------+------+------------+---------+---------+--------+
|     0 | Rajesh | CEO       | 7839 | NULL       | 9824.00 |    NULL |     10 |
|  3245 | Raj    | Clerk     | 7844 | NULL       | 2434.00 |    NULL |     20 |
|  7369 | SMITH  | CLERK     | 7902 | 1980-12-17 |  800.00 |    NULL |     20 |
|  7499 | ALLEN  | SALESMAN  | 7698 | 1981-02-20 | 1600.00 |  300.00 |     30 |
|  7521 | WARD   | SALESMAN  | 7698 | 1981-02-22 | 1250.00 |  500.00 |     30 |
|  7566 | JONES  | MANAGER   | 7839 | 1981-04-02 | 2975.00 |    NULL |     20 |
|  7654 | MARTIN | SALESMAN  | 7698 | 1981-09-28 | 1250.00 | 1400.00 |     30 |
|  7698 | BLAKE  | MANAGER   | 7839 | 1981-05-01 | 2850.00 |    NULL |     30 |
|  7782 | CLARK  | MANAGER   | 7839 | 1981-06-09 | 2450.00 |    NULL |     10 |
|  7788 | SCOTT  | ANALYST   | 7566 | 1982-12-09 | 3000.00 |    NULL |     20 |
|  7839 | KING   | PRESIDENT | NULL | 1981-11-17 | 5000.00 |    NULL |     10 |
|  7844 | TURNER | SALESMAN  | 7698 | 1981-09-08 | 1500.00 |    0.00 |     30 |
|  7876 | ADAMS  | CLERK     | 7788 | 1983-01-12 | 1100.00 |    NULL |     20 |
|  7900 | JAMES  | CLERK     | 7698 | 1981-12-03 |  950.00 |    NULL |     30 |
|  7902 | FORD   | ANALYST   | 7566 | 1981-12-03 | 3000.00 |    NULL |     20 |
|  7934 | MILLER | CLERK     | 7782 | 1982-01-23 | 1300.00 |    NULL |     10 |
+-------+--------+-----------+------+------------+---------+---------+--------+
16 rows in set (0.00 sec)

mysql> set autocommit = 0;
Query OK, 0 rows affected (0.00 sec)

mysql> insert into emp100 values (0001, 'Priya', 'CFO', NULL, NULL, 38748, NULL, 10);
Query OK, 1 row affected (0.00 sec)

mysql> select * from emp100;
+-------+--------+-----------+------+------------+----------+---------+--------+
| EMPNO | ENAME  | JOB       | MGR  | HIREDATE   | SAL      | COMM    | DEPTNO |
+-------+--------+-----------+------+------------+----------+---------+--------+
|     0 | Rajesh | CEO       | 7839 | NULL       |  9824.00 |    NULL |     10 |
|     1 | Priya  | CFO       | NULL | NULL       | 38748.00 |    NULL |     10 |
|  3245 | Raj    | Clerk     | 7844 | NULL       |  2434.00 |    NULL |     20 |
|  7369 | SMITH  | CLERK     | 7902 | 1980-12-17 |   800.00 |    NULL |     20 |
|  7499 | ALLEN  | SALESMAN  | 7698 | 1981-02-20 |  1600.00 |  300.00 |     30 |
|  7521 | WARD   | SALESMAN  | 7698 | 1981-02-22 |  1250.00 |  500.00 |     30 |
|  7566 | JONES  | MANAGER   | 7839 | 1981-04-02 |  2975.00 |    NULL |     20 |
|  7654 | MARTIN | SALESMAN  | 7698 | 1981-09-28 |  1250.00 | 1400.00 |     30 |
|  7698 | BLAKE  | MANAGER   | 7839 | 1981-05-01 |  2850.00 |    NULL |     30 |
|  7782 | CLARK  | MANAGER   | 7839 | 1981-06-09 |  2450.00 |    NULL |     10 |
|  7788 | SCOTT  | ANALYST   | 7566 | 1982-12-09 |  3000.00 |    NULL |     20 |
|  7839 | KING   | PRESIDENT | NULL | 1981-11-17 |  5000.00 |    NULL |     10 |
|  7844 | TURNER | SALESMAN  | 7698 | 1981-09-08 |  1500.00 |    0.00 |     30 |
|  7876 | ADAMS  | CLERK     | 7788 | 1983-01-12 |  1100.00 |    NULL |     20 |
|  7900 | JAMES  | CLERK     | 7698 | 1981-12-03 |   950.00 |    NULL |     30 |
|  7902 | FORD   | ANALYST   | 7566 | 1981-12-03 |  3000.00 |    NULL |     20 |
|  7934 | MILLER | CLERK     | 7782 | 1982-01-23 |  1300.00 |    NULL |     10 |
+-------+--------+-----------+------+------------+----------+---------+--------+
17 rows in set (0.00 sec)

mysql> rollback;
Query OK, 0 rows affected (0.00 sec)

mysql> select * from emp100;
+-------+--------+-----------+------+------------+---------+---------+--------+
| EMPNO | ENAME  | JOB       | MGR  | HIREDATE   | SAL     | COMM    | DEPTNO |
+-------+--------+-----------+------+------------+---------+---------+--------+
|     0 | Rajesh | CEO       | 7839 | NULL       | 9824.00 |    NULL |     10 |
|  3245 | Raj    | Clerk     | 7844 | NULL       | 2434.00 |    NULL |     20 |
|  7369 | SMITH  | CLERK     | 7902 | 1980-12-17 |  800.00 |    NULL |     20 |
|  7499 | ALLEN  | SALESMAN  | 7698 | 1981-02-20 | 1600.00 |  300.00 |     30 |
|  7521 | WARD   | SALESMAN  | 7698 | 1981-02-22 | 1250.00 |  500.00 |     30 |
|  7566 | JONES  | MANAGER   | 7839 | 1981-04-02 | 2975.00 |    NULL |     20 |
|  7654 | MARTIN | SALESMAN  | 7698 | 1981-09-28 | 1250.00 | 1400.00 |     30 |
|  7698 | BLAKE  | MANAGER   | 7839 | 1981-05-01 | 2850.00 |    NULL |     30 |
|  7782 | CLARK  | MANAGER   | 7839 | 1981-06-09 | 2450.00 |    NULL |     10 |
|  7788 | SCOTT  | ANALYST   | 7566 | 1982-12-09 | 3000.00 |    NULL |     20 |
|  7839 | KING   | PRESIDENT | NULL | 1981-11-17 | 5000.00 |    NULL |     10 |
|  7844 | TURNER | SALESMAN  | 7698 | 1981-09-08 | 1500.00 |    0.00 |     30 |
|  7876 | ADAMS  | CLERK     | 7788 | 1983-01-12 | 1100.00 |    NULL |     20 |
|  7900 | JAMES  | CLERK     | 7698 | 1981-12-03 |  950.00 |    NULL |     30 |
|  7902 | FORD   | ANALYST   | 7566 | 1981-12-03 | 3000.00 |    NULL |     20 |
|  7934 | MILLER | CLERK     | 7782 | 1982-01-23 | 1300.00 |    NULL |     10 |
+-------+--------+-----------+------+------------+---------+---------+--------+
16 rows in set (0.00 sec)
mysql> savepoint A;
Query OK, 0 rows affected (0.00 sec)

mysql> insert into emp100 values (0001, 'Priya', 'CFO', NULL, NULL, 38748, NULL, 10);
Query OK, 1 row affected (0.00 sec)

mysql> savepoint B;
Query OK, 0 rows affected (0.00 sec)

mysql> delete from emp100 where ename = 'ward';
Query OK, 1 row affected (0.01 sec)

mysql> savepoint C;
Query OK, 0 rows affected (0.00 sec)

mysql> insert into emp100 values (0121, 'riya', 'CO', NULL, NULL, 38748, NULL, 10);
Query OK, 1 row affected (0.00 sec)

mysql> rollback to B;
Query OK, 0 rows affected (0.00 sec)

mysql> select * from emp100;
+-------+--------+-----------+------+------------+----------+---------+--------+
| EMPNO | ENAME  | JOB       | MGR  | HIREDATE   | SAL      | COMM    | DEPTNO |
+-------+--------+-----------+------+------------+----------+---------+--------+
|     0 | Rajesh | CEO       | 7839 | NULL       |  9824.00 |    NULL |     10 |
|     1 | Priya  | CFO       | NULL | NULL       | 38748.00 |    NULL |     10 |
|  3245 | Raj    | Clerk     | 7844 | NULL       |  2434.00 |    NULL |     20 |
|  7369 | SMITH  | CLERK     | 7902 | 1980-12-17 |   800.00 |    NULL |     20 |
|  7499 | ALLEN  | SALESMAN  | 7698 | 1981-02-20 |  1600.00 |  300.00 |     30 |
|  7521 | WARD   | SALESMAN  | 7698 | 1981-02-22 |  1250.00 |  500.00 |     30 |
|  7566 | JONES  | MANAGER   | 7839 | 1981-04-02 |  2975.00 |    NULL |     20 |
|  7654 | MARTIN | SALESMAN  | 7698 | 1981-09-28 |  1250.00 | 1400.00 |     30 |
|  7698 | BLAKE  | MANAGER   | 7839 | 1981-05-01 |  2850.00 |    NULL |     30 |
|  7782 | CLARK  | MANAGER   | 7839 | 1981-06-09 |  2450.00 |    NULL |     10 |
|  7788 | SCOTT  | ANALYST   | 7566 | 1982-12-09 |  3000.00 |    NULL |     20 |
|  7839 | KING   | PRESIDENT | NULL | 1981-11-17 |  5000.00 |    NULL |     10 |
|  7844 | TURNER | SALESMAN  | 7698 | 1981-09-08 |  1500.00 |    0.00 |     30 |
|  7876 | ADAMS  | CLERK     | 7788 | 1983-01-12 |  1100.00 |    NULL |     20 |
|  7900 | JAMES  | CLERK     | 7698 | 1981-12-03 |   950.00 |    NULL |     30 |
|  7902 | FORD   | ANALYST   | 7566 | 1981-12-03 |  3000.00 |    NULL |     20 |
|  7934 | MILLER | CLERK     | 7782 | 1982-01-23 |  1300.00 |    NULL |     10 |
+-------+--------+-----------+------+------------+----------+---------+--------+
17 rows in set (0.00 sec)
 



